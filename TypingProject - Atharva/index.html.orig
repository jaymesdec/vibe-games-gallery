<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Typing Racer</title>
  <style>
    body {
      background-color: #1e1e2f;
      color: #fff;
      font-family: 'Courier New', monospace;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 40px;
    }

    h1 {
      color: #ffcc00;
    }

    #description {
      font-size: 18px;
      margin-top: -10px;
      margin-bottom: 20px;
      max-width: 600px;
      text-align: center;
      color: #ddd;
    }

    #prompt {
      font-size: 22px;
      line-height: 1.6;
      width: 90%;
      max-width: 800px;
      margin: 20px 0;
      background: #2e2e3e;
      padding: 20px;
      border-radius: 10px;
      white-space: pre-wrap;
    }

    #promptImage {
      display: block;
      margin: 10px auto 20px auto;
      height: 150px;
      max-width: 100%;
      object-fit: contain;
      position: static;
      transition: opacity 0.3s;
    }

    .char {
      display: inline-block;
    }

    .correct {
      color: #0f0;
    }

    .incorrect {
      color: #f44;
    }

    .current {
      border-left: 2px solid #ffcc00;
      animation: blink 1s step-start infinite;
    }

    @keyframes blink {
      50% {
        border-color: transparent;
      }
    }

    #inputArea {
      opacity: 0;
      position: absolute;
      pointer-events: none;
    }

    #progressBarContainer {
      width: 85%;
      max-width: 800px;
      background-color: #333;
      height: 40px;
      border-radius: 20px;
      margin-top: 0;
      overflow: hidden;
      position: relative;
      border: 2px solid #555;
    }

    #progressBar {
      height: 100%;
      width: 0%;
      background: linear-gradient(to right, #00ff88, #00ddff);
      transition: width 0.2s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: bold;
      color: #000;
      font-size: 16px;
    }

    .threshold-line {
      position: absolute;
      top: 0;
      bottom: 0;
      width: 2px;
      background-color: #ffcc00;
      opacity: 0.8;
    }

    #result {
      margin-top: 20px;
      font-size: 18px;
    }

    button {
      padding: 10px 20px;
      background: #ffcc00;
      border: none;
      color: black;
      font-weight: bold;
      font-size: 16px;
      border-radius: 8px;
      cursor: pointer;
      margin-top: 10px;
    }

    #timer {
      font-size: 24px;
      margin-top: 20px;
      color: #ffcc00;
    }
  </style>
</head>
<body>
  <h1>Typing Racer</h1>
  <div id="description">
    Type the displayed text as quickly and accurately as possible. Progress is tracked with a progress bar and a beep sound will play every 25% you complete. Try to beat your best speed and accuracy!
  </div>

  <div id="prompt"></div>
  <img id="promptImage" src="" alt="Prompt Visual" />

  <div id="progressBarContainer">
    <div class="threshold-line" style="left: 25%;"></div>
    <div class="threshold-line" style="left: 50%;"></div>
    <div class="threshold-line" style="left: 75%;"></div>
    <div id="progressBar">0%</div>
  </div>

  <input id="inputArea" type="text" autocomplete="off" />
  <div id="timer">Time: 0.00</div>
  <button onclick="startGame()">Start</button>
  <div id="result"></div>

  <audio id="background" src="sounds/background.mp3" loop preload="auto"></audio>
  <audio id="beep" src="sounds/beep.mp3" preload="auto"></audio>
  <audio id="finish" src="sounds/finish.mp3" preload="auto"></audio>

  <script>
    const prompts = [
      {
        text: "Coding is the process of giving instructions to a computer to perform tasks. It involves writing commands that tell the computer what to do step by step. Learning to code helps people create programs, solve problems, and automate tasks. Being able to type code quickly and accurately makes programming easier and more efficient.",
        image: "images/coding.png"
      },
      {
        text: "Foxes are small, intelligent mammals known for their bushy tails and sharp senses. They live in a variety of habitats, from forests to deserts. Foxes are skilled hunters, feeding on small animals, birds, and insects. They are also very adaptable, able to thrive near human settlements.",
        image: "images/fox.png"
      },
      {
        text: "Sailing through a storm is one of the toughest challenges at sea. Strong winds and towering waves test the skill and courage of a sailor. It is important to stay calm, adjust the sails, and navigate carefully to stay safe. Experienced sailors prepare for storms by checking weather and securing their boats.",
        image: "images/storm.png"
      },
      {
        text: "Science experiments help us explore and understand the world around us. By testing ideas and making observations, we can discover new facts and solve problems. Experiments need careful planning, accurate measurements, and clear recording of results. They are an important part of learning and making scientific progress.",
        image: "images/stem.png"
      },
      {
        text: "Mountains are large landforms that rise high above the surrounding land. They are formed by natural forces like tectonic movements and volcanic activity. Mountains affect weather and provide homes for many plants and animals. People often visit mountains for hiking, climbing, and enjoying nature.",
        image: "images/mountain.png"
      }
    ];

    let promptText = "";
    let startTime;
    let finished = false;
    let timerInterval;
    let thresholdState = { 25: false, 50: false, 75: false };

    const promptDiv = document.getElementById("prompt");
    const inputArea = document.getElementById("inputArea");
    const resultDiv = document.getElementById("result");
    const progressBar = document.getElementById("progressBar");
    const timerDiv = document.getElementById("timer");
    const promptImage = document.getElementById("promptImage");

    const backgroundMusic = document.getElementById("background");
    const beepSound = document.getElementById("beep");
    const finishSound = document.getElementById("finish");

    function startGame() {
      const selectedPrompt = prompts[Math.floor(Math.random() * prompts.length)];
      promptText = selectedPrompt.text;
      finished = false;
      inputArea.value = "";
      inputArea.disabled = false;
      resultDiv.innerHTML = "";
      thresholdState = { 25: false, 50: false, 75: false };

      promptImage.src = selectedPrompt.image;

      renderPrompt();
      inputArea.focus();

      startTime = new Date();
      clearInterval(timerInterval);
      timerInterval = setInterval(updateTimer, 100);

      backgroundMusic.currentTime = 0;
      backgroundMusic.play();
    }

    function renderPrompt() {
      promptDiv.innerHTML = "";
      for (let i = 0; i < promptText.length; i++) {
        const span = document.createElement("span");
        span.textContent = promptText[i];
        span.classList.add("char");
        if (i === 0) span.classList.add("current");
        promptDiv.appendChild(span);
      }
      updateProgress(0);
    }

    function updateProgress(percent) {
      const p = Math.min(100, Math.max(0, percent));
      progressBar.style.width = p + "%";
      progressBar.textContent = Math.floor(p) + "%";

      [25, 50, 75].forEach(threshold => {
        if (p >= threshold && !thresholdState[threshold]) {
          thresholdState[threshold] = true;
          beepSound.currentTime = 0;
          beepSound.play();
        }
      });
    }

    function updateTimer() {
      const now = new Date();
      const seconds = ((now - startTime) / 1000).toFixed(2);
      timerDiv.textContent = "Time: " + seconds;
    }

    inputArea.addEventListener("input", () => {
      if (finished) return;

      const typed = inputArea.value;
      const chars = promptDiv.querySelectorAll(".char");

      for (let i = 0; i < promptText.length; i++) {
        chars[i].classList.remove("correct", "incorrect", "current");
        if (i < typed.length) {
          chars[i].classList.add(typed[i] === promptText[i] ? "correct" : "incorrect");
        } else if (i === typed.length) {
          chars[i].classList.add("current");
        }
      }

      const progress = (typed.length / promptText.length) * 100;
      updateProgress(progress);

      if (typed.length >= promptText.length) {
        inputArea.blur();
        endGame();
      }
    });

    function endGame() {
      finished = true;
      clearInterval(timerInterval);
      inputArea.disabled = true;
      backgroundMusic.pause();
      finishSound.currentTime = 0;
      finishSound.play();

      const endTime = new Date();
      const timeTaken = (endTime - startTime) / 1000;
      const words = promptText.split(" ").length;
      const wpm = Math.round((words / timeTaken) * 60);

      const typed = inputArea.value;
      let correctChars = 0;
      for (let i = 0; i < promptText.length; i++) {
        if (typed[i] === promptText[i]) correctChars++;
      }
      const accuracy = Math.round((correctChars / promptText.length) * 100);

      resultDiv.innerHTML = `
        <h2>âœ… Finished!</h2>
        <p><strong>WPM:</strong> ${wpm}</p>
        <p><strong>Accuracy:</strong> ${accuracy}%</p>
        <p><strong>Time:</strong> ${timeTaken.toFixed(2)} seconds</p>
      `;
    }
  </script>
</body>
</html>
